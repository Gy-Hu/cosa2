(define-fun assumption.0 ((RTL.instr_jalr (_ BitVec 1)) (RTL.trap (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_do_prefetch (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.latched_rd (_ BitVec 5)) (RTL.latched_compr (_ BitVec 1)) (RTL.latched_branch (_ BitVec 1)) (RTL.instr_jal (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.decoded_rd (_ BitVec 5)) (RTL.cpu_state (_ BitVec 8))) Bool (and (and (and (and (and (and (and (and true (or (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.decoder_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv8 8)))))) (or (or (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv32 8)))) (not (= ((_ extract 0 0) RTL.instr_jalr) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.mem_do_prefetch) ((_ extract 0 0) (_ bv1 1)))))) (or (not (= ((_ extract 0 0) RTL.latched_branch) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.cpu_state) ((_ extract 0 0) (_ bv1 8)))))) (or (not (= ((_ extract 0 0) RTL.latched_branch) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv32 8)))))) (or (or (or (not (= ((_ extract 0 0) RTL.latched_rd) ((_ extract 0 0) (_ bv17 5)))) (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.instr_jalr) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 3 3) RTL.cpu_state) ((_ extract 3 3) (_ bv8 8)))))) (or (or (or (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv2 8)))) (not (= ((_ extract 6 6) RTL.cpu_state) ((_ extract 6 6) (_ bv2 8))))) (not (= ((_ extract 4 4) RTL.latched_rd) ((_ extract 4 4) (_ bv17 5))))) (not (= ((_ extract 0 0) RTL.latched_branch) ((_ extract 0 0) (_ bv1 1)))))) (not (and (and (and (and (and (and (and (and (and (and (= RTL.cpu_state (_ bv64 8)) (and (= ((_ extract 1 0) RTL.decoded_rd) ((_ extract 1 0) (_ bv15 5))) (= ((_ extract 4 4) RTL.decoded_rd) ((_ extract 4 4) (_ bv15 5))))) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.instr_jal (_ bv1 1))) (= RTL.latched_branch (_ bv1 1))) (= RTL.latched_compr (_ bv0 1))) (= RTL.latched_rd (_ bv17 5))) (= RTL.mem_do_rdata (_ bv0 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_wdata (_ bv0 1))) (= RTL.mem_valid (_ bv0 1))))))
(define-fun assumption.1 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.latched_store (_ BitVec 1)) (RTL.latched_stalu (_ BitVec 1)) (RTL.latched_branch (_ BitVec 1)) (RTL.instr_jal (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1)) (RTL.mem_state (_ BitVec 2))) Bool (and (and true (or (or (not (= ((_ extract 0 0) RTL.mem_valid) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2)))))) (not (and (and (and (and (and (and (and (and (and (and (= RTL.compressed_instr (_ bv0 1)) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.instr_jal (_ bv1 1))) (= RTL.latched_branch (_ bv0 1))) (= RTL.latched_stalu (_ bv0 1))) (= RTL.latched_store (_ bv1 1))) (= RTL.mem_do_rdata (_ bv0 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_wdata (_ bv0 1))) (= RTL.mem_instr (_ bv1 1))) (= RTL.mem_valid (_ bv1 1))))))
(define-fun assumption.2 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.latched_store (_ BitVec 1)) (RTL.latched_stalu (_ BitVec 1)) (RTL.latched_branch (_ BitVec 1)) (RTL.instr_jal (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1)) (RTL.cpu_state (_ BitVec 8))) Bool (and (and (and (and true (not (= ((_ extract 4 4) RTL.cpu_state) ((_ extract 4 4) (_ bv16 8))))) (or (not (= ((_ extract 0 0) RTL.latched_branch) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv32 8)))))) (or (not (= ((_ extract 0 0) RTL.latched_branch) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.cpu_state) ((_ extract 1 1) (_ bv2 8)))))) (not (and (and (and (and (and (and (and (and (= RTL.compressed_instr (_ bv0 1)) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.instr_jal (_ bv1 1))) (= RTL.latched_branch (_ bv1 1))) (= RTL.latched_stalu (_ bv1 1))) (= RTL.latched_store (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_wdata (_ bv1 1))) (= RTL.mem_valid (_ bv0 1))))))
(define-fun assumption.3 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.latched_store (_ BitVec 1)) (RTL.latched_stalu (_ BitVec 1)) (RTL.latched_branch (_ BitVec 1)) (RTL.instr_jal (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1))) Bool (and (and true (or (not (= ((_ extract 0 0) RTL.compressed_instr) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.instr_jal) ((_ extract 0 0) (_ bv1 1)))))) (not (and (and (and (and (and (and (and (and (= RTL.compressed_instr (_ bv1 1)) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.instr_jal (_ bv1 1))) (= RTL.latched_branch (_ bv0 1))) (= RTL.latched_stalu (_ bv0 1))) (= RTL.latched_store (_ bv1 1))) (= RTL.mem_do_rdata (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_valid (_ bv0 1))))))
(define-fun assumption.4 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.latched_store (_ BitVec 1)) (RTL.latched_stalu (_ BitVec 1)) (RTL.latched_branch (_ BitVec 1)) (RTL.instr_jal (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1)) (RTL.cpu_state (_ BitVec 8)) (RTL.trap (_ BitVec 1))) Bool (and (and (and (and (and true (or (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv2 8)))) (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))))) (not (= ((_ extract 4 4) RTL.cpu_state) ((_ extract 4 4) (_ bv16 8))))) (or (not (= ((_ extract 0 0) RTL.latched_store) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv32 8)))))) (or (not (= ((_ extract 0 0) RTL.latched_store) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.cpu_state) ((_ extract 1 1) (_ bv2 8)))))) (not (and (and (and (and (and (and (and (and (= RTL.compressed_instr (_ bv0 1)) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.instr_jal (_ bv1 1))) (= RTL.latched_branch (_ bv0 1))) (= RTL.latched_stalu (_ bv1 1))) (= RTL.latched_store (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_wdata (_ bv1 1))) (= RTL.mem_valid (_ bv0 1))))))
