(define-fun assumption.0 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1))) Bool (and (not (and (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv0 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))) (= (_ bv1 2) RTL.reg_3_w_stage))) (and (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))) (not (and (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (= RTL.id_ex_rd RTL.reg_0_w_stage)) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))
(define-fun assumption.1 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.2 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv3 2) RTL.id_ex_rd) (= (_ bv1 2) RTL.reg_0_w_stage))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.reg_1_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))))))
(define-fun assumption.3 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (= (_ bv1 2) RTL.reg_0_w_stage)))) (and (not (and (not (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)))))))
(define-fun assumption.4 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.5 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.6 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.7 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv0 2) RTL.id_ex_rd))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.8 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= (_ bv0 2) RTL.ex_wb_rd) (= RTL.id_ex_op (_ bv0 2))))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))
(define-fun assumption.9 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.10 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.ex_wb_rd))))) (and (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))) (not (and (not (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))
(define-fun assumption.11 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.ex_wb_rd)))) (and (not (and (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))
(define-fun assumption.12 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (not (and (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))) (= (_ bv1 2) RTL.reg_3_w_stage))))
(define-fun assumption.13 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd))))))))
(define-fun assumption.14 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv2 2) RTL.id_ex_rd)))))))) (and (not (and (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))))))))
(define-fun assumption.15 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.16 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.17 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))))
(define-fun assumption.18 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2))) Bool (not (and (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)) (= (_ bv1 2) RTL.reg_3_w_stage))))
(define-fun assumption.19 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))
(define-fun assumption.20 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd)))))) (and (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (not (and (and (= RTL.id_ex_rd RTL.reg_0_w_stage) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))
(define-fun assumption.21 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.22 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv0 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))))))
(define-fun assumption.23 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.24 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))
(define-fun assumption.25 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd))))))))
(define-fun assumption.26 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv0 2) RTL.ex_wb_rd)))))) (and (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))) (and (not (and (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd RTL.reg_0_w_stage))) (not (and (= RTL.id_ex_rd RTL.reg_0_w_stage) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))
(define-fun assumption.27 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.28 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv3 2) RTL.ex_wb_rd)))) (and (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))))
(define-fun assumption.29 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.30 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.reg_1_w_stage)))) (and (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.reg_1_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (not (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (not (and (= RTL.reg_1_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_3_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.31 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.32 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv1 2) RTL.id_ex_rd))))))) (and (not (and (= RTL.id_ex_rd RTL.reg_2_w_stage) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (not (and (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))
(define-fun assumption.33 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv0 2) RTL.ex_wb_rd)))))) (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))))
(define-fun assumption.34 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (= (_ bv0 2) RTL.ex_wb_rd))))) (and (not (and (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))) (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))
(define-fun assumption.35 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (= (_ bv0 2) RTL.ex_wb_rd)))) (and (not (and (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.id_ex_rd RTL.reg_2_w_stage)))) (not (and (= (_ bv0 2) RTL.id_ex_rd) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))))))
(define-fun assumption.36 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv1 2) RTL.reg_3_w_stage))) (and (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (= RTL.reg_3_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))))))
(define-fun assumption.37 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.38 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.39 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.40 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.41 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.42 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.43 ((RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2)))))))))))
(define-fun assumption.44 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.45 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.46 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))) (and (not (and (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (not (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.47 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.48 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.49 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.50 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv2 2) RTL.id_ex_rd)))))))) (and (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))))))) (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))))))
(define-fun assumption.51 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.52 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.53 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))))
(define-fun assumption.54 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv3 2) RTL.ex_wb_rd)))))) (and (not (and (= RTL.id_ex_rd RTL.reg_2_w_stage) (and (not (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))) (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= RTL.id_ex_rd RTL.reg_2_w_stage) (and (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))))))
(define-fun assumption.55 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.56 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_reg_wen (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.57 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.58 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))))) (= (_ bv1 2) RTL.reg_0_w_stage))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.59 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))) (and (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.60 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv3 2) RTL.id_ex_rd)))))))) (and (not (and (not (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (not (and (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))))
(define-fun assumption.61 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))) (and (not (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (not (= RTL.reg_3_w_stage RTL.reg_0_w_stage))))))) (and (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))) (and (not (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= RTL.reg_3_w_stage RTL.reg_0_w_stage) (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))))) (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (not (= RTL.reg_3_w_stage RTL.reg_0_w_stage)) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))))))))))
(define-fun assumption.62 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.63 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.64 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv2 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))) (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))))
(define-fun assumption.65 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.66 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.67 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.68 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.69 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.70 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.71 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (= (_ bv3 2) RTL.ex_wb_rd)))))) (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))))))
(define-fun assumption.72 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (= (_ bv3 2) RTL.ex_wb_rd))))) (and (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.73 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (not (and (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))) (= (_ bv1 2) RTL.reg_3_w_stage))))
(define-fun assumption.74 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv1 2) RTL.ex_wb_rd))))))) (and (not (and (= RTL.id_ex_rd RTL.reg_0_w_stage) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))))) (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))
(define-fun assumption.75 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.76 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.77 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv2 2) RTL.ex_wb_rd) (= (_ bv1 2) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (= RTL.id_ex_rd RTL.reg_0_w_stage))) (not (and (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))
(define-fun assumption.78 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (= (_ bv2 2) RTL.ex_wb_rd))))) (not (and (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= (_ bv2 2) RTL.id_ex_rd) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))))))
(define-fun assumption.79 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (= (_ bv2 2) RTL.ex_wb_rd)))) (and (not (and (not (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (and (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))) (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))))
(define-fun assumption.80 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.81 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv1 2) RTL.ex_wb_rd))))))))
(define-fun assumption.82 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.ex_wb_rd)))))) (= (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))
(define-fun assumption.83 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (= (_ bv1 2) RTL.ex_wb_rd)))) (and (not (and (and (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (not (and (= (_ bv1 2) RTL.id_ex_rd) (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))) (not (and (and (= (_ bv1 2) RTL.id_ex_rd) (not (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))
(define-fun assumption.84 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (= (_ bv1 2) RTL.ex_wb_rd))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= (_ bv0 2) RTL.id_ex_rd))))))
(define-fun assumption.85 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.86 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (and (not (and (and (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.reg_1_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (and (not (and (= RTL.reg_1_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))) (and (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (not (and (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (not (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (not (and (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))))))))
(define-fun assumption.87 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (= (_ bv2 2) RTL.ex_wb_rd))))) (and (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (= RTL.id_ex_rd RTL.reg_2_w_stage) (not (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))))) (not (and (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))))))
(define-fun assumption.88 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (= (_ bv1 2) RTL.reg_2_w_stage)))) (and (not (and (and (= RTL.reg_1_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (not (and (not (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))) (and (not (and (= RTL.reg_3_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))) (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (not (and (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))) (and (= RTL.reg_1_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (= RTL.reg_1_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))))
(define-fun assumption.89 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.90 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))))
(define-fun assumption.91 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv1 2) RTL.reg_0_w_stage)))) (and (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))) (and (not (and (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))) (and (not (and (= RTL.reg_0_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))) (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))))))))
(define-fun assumption.92 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (= (_ bv1 2) RTL.reg_0_w_stage))) (and (not (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (= RTL.reg_3_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))) (and (not (and (= RTL.reg_3_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))) (not (and (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))))
(define-fun assumption.93 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.94 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))))
(define-fun assumption.95 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (= (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (= ((_ extract 1 1) RTL.reg_3_w_stage) RTL.id_ex_reg_wen))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.96 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= ((_ extract 1 1) RTL.reg_3_w_stage) RTL.id_ex_reg_wen))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.97 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.98 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.99 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.100 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.101 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) RTL.id_ex_reg_wen)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.102 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.103 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.104 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv3 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv3 2) RTL.id_ex_rd)))))) (= (_ bv1 2) RTL.reg_3_w_stage))) (and (not (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (and (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))))) (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))))
(define-fun assumption.105 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.106 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv1 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv2 2)) (= (_ bv3 2) RTL.ex_wb_rd))))))))
(define-fun assumption.107 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.108 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.109 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.110 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.111 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.112 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage))))))
(define-fun assumption.113 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.114 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.115 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv0 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))))) (and (not (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))))
(define-fun assumption.116 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.id_ex_rd) (= (_ bv2 2) RTL.ex_wb_rd))))))) (not (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))))))))
(define-fun assumption.117 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.118 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.119 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.120 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv1 2) RTL.ex_wb_rd))))))))
(define-fun assumption.121 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.ex_wb_rd)))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))) (not (and (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))
(define-fun assumption.122 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.123 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.124 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv1 2) RTL.id_ex_rd)))))))) (and (not (and (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (not (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_0_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))))))
(define-fun assumption.125 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.126 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv0 2) RTL.ex_wb_rd))))))))
(define-fun assumption.127 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.128 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.129 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv2 2) RTL.ex_wb_rd) (= (_ bv1 2) RTL.reg_0_w_stage))))) (and (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.id_ex_rd RTL.reg_0_w_stage))) (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.130 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (= (_ bv1 1) RTL.id_ex_reg_wen) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.131 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))) (and (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))) (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))) (and (not (and (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (not (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= RTL.reg_1_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))) (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))))))))))
(define-fun assumption.132 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (or (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))) (= RTL.id_ex_reg_wen ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= RTL.id_ex_rd ((_ zero_extend 1) (_ bv1 1)))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.133 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.id_ex_rd) (= (_ bv1 2) RTL.ex_wb_rd))))))) (and (not (and (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))))) (and (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (not (and (= RTL.id_ex_rd RTL.reg_0_w_stage) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))
(define-fun assumption.134 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.135 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv0 2) RTL.id_ex_rd))))))) (and (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))))))))
(define-fun assumption.136 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and true (or (not (= RTL.id_ex_reg_wen ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= (_ bv2 2) RTL.reg_2_w_stage)))) (or (= (_ bv1 1) RTL.id_ex_reg_wen) (= ((_ extract 1 1) RTL.reg_3_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.137 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.138 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.139 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.140 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.141 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.id_ex_rd) (= (_ bv1 2) RTL.ex_wb_rd))))))) (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))))
(define-fun assumption.142 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv1 2) RTL.ex_wb_rd)))))) (and (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (and (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))) (not (and (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))
(define-fun assumption.143 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv2 2) RTL.id_ex_rd))) (= (_ bv1 2) RTL.reg_0_w_stage)))))) (and (not (and (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (not (and (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (not (and (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))))) (and (not (and (= RTL.reg_1_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))) (not (and (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_0_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))))))
(define-fun assumption.144 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and true (or (= ((_ extract 1 1) RTL.reg_0_w_stage) RTL.id_ex_reg_wen) (not (= (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (_ bv2 2)) RTL.reg_0_w_stage)))) (or (= ((_ extract 1 1) RTL.reg_0_w_stage) RTL.id_ex_reg_wen) (= (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.145 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.146 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv0 2) RTL.id_ex_rd))))))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)))))))
(define-fun assumption.147 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.148 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (_ bv1 1) RTL.id_ex_reg_wen))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.149 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.150 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv2 2)) (= (_ bv0 2) RTL.ex_wb_rd))))))))
(define-fun assumption.151 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.152 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage))))))
(define-fun assumption.153 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))))) (= (_ bv1 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.154 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv1 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.ex_wb_rd))))))))
(define-fun assumption.155 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv3 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))) (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))
(define-fun assumption.156 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.157 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage))))))
(define-fun assumption.158 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv2 2) RTL.ex_wb_rd) (= (_ bv3 2) RTL.id_ex_rd))))))) (not (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))))
(define-fun assumption.159 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2)))))))))) (and (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (and (not (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))))))) (and (not (and (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (and (not (and (= RTL.reg_1_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (and (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (and (not (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))))))) (not (and (not (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (not (= RTL.reg_3_w_stage RTL.reg_0_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))))))))
(define-fun assumption.160 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.161 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))) (= (_ bv1 2) RTL.reg_1_w_stage))))))
(define-fun assumption.162 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.163 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= RTL.id_ex_op (_ bv0 2)))))))) (not (and (= (bvnot ((_ extract 1 1) RTL.reg_0_w_stage)) ((_ extract 1 1) RTL.reg_2_w_stage)) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))
(define-fun assumption.164 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.165 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage)) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.166 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv3 2) RTL.id_ex_rd))))))) (and (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (not (and (and (not (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))))
(define-fun assumption.167 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv0 2) RTL.ex_wb_rd)))))) (and (not (and (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (not (and (= (bvnot ((_ extract 1 1) RTL.reg_0_w_stage)) ((_ extract 1 1) RTL.reg_2_w_stage)) (= RTL.id_ex_rd RTL.reg_0_w_stage)))))))
(define-fun assumption.168 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv0 2) RTL.ex_wb_rd))))) (and (not (and (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (= RTL.id_ex_rd RTL.reg_0_w_stage)) (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (not (and (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))) (not (and (= RTL.id_ex_rd RTL.reg_0_w_stage) (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))
(define-fun assumption.169 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv1 2) RTL.reg_2_w_stage)))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)))))))
(define-fun assumption.170 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv0 2) RTL.id_ex_rd)))))))) (and (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= RTL.id_ex_rd RTL.reg_3_w_stage)) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))))) (and (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= RTL.id_ex_rd RTL.reg_3_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.id_ex_rd RTL.reg_0_w_stage)))))))))
(define-fun assumption.171 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.172 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.173 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.174 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv3 2) RTL.id_ex_rd)))))))) (and (not (and (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))
(define-fun assumption.175 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))))))
(define-fun assumption.176 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv0 2) RTL.reg_0_w_stage)))))))
(define-fun assumption.177 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and true (or (not (= (_ bv0 2) RTL.id_ex_rd)) (not (= (_ bv2 2) RTL.reg_1_w_stage)))) (or (not (= (_ bv0 2) RTL.id_ex_rd)) (not (= RTL.reg_1_w_stage (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.178 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.179 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv1 2) RTL.ex_wb_rd))))))))
(define-fun assumption.180 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and (and (and true (or (or (not (= RTL.reg_1_w_stage (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)))) (not (= (= RTL.reg_3_w_stage (_ bv0 2)) (= RTL.id_ex_reg_wen (_ bv0 1))))) (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (or (or (or (= RTL.reg_3_w_stage RTL.reg_0_w_stage) (not (= ((_ extract 1 1) RTL.reg_3_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))) (= (= RTL.reg_0_w_stage (_ bv0 2)) (= RTL.id_ex_reg_wen (_ bv0 1)))) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (or (or (= (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (not (= (= RTL.reg_3_w_stage (_ bv0 2)) (= RTL.id_ex_reg_wen (_ bv0 1))))) (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (or (or (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (not (= RTL.reg_3_w_stage ((_ zero_extend 1) (_ bv1 1))))) (= (= RTL.reg_3_w_stage (_ bv0 2)) (= RTL.id_ex_reg_wen (_ bv0 1))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.181 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv2 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))))))) (and (not (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))) (and (not (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))) (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))))))
(define-fun assumption.182 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))))) (and (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= RTL.reg_3_w_stage RTL.reg_0_w_stage))))) (and (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (= RTL.reg_3_w_stage RTL.reg_0_w_stage)))))) (and (not (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= RTL.reg_2_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= RTL.reg_3_w_stage RTL.reg_0_w_stage)))))))))))
(define-fun assumption.183 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.184 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv2 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.185 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.186 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.187 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.188 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.189 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.190 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv0 2) RTL.id_ex_rd)))))))) (and (not (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))))))) (not (and (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (not (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))
(define-fun assumption.191 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))) (= (_ bv1 2) RTL.reg_1_w_stage))))) (and (not (and (= RTL.id_ex_rd RTL.reg_2_w_stage) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))) (and (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (and (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))))) (and (not (and (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))))) (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (= RTL.reg_2_w_stage RTL.reg_0_w_stage) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))))))))))
(define-fun assumption.192 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (or (not (= (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= RTL.id_ex_reg_wen ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (_ bv2 2)) RTL.id_ex_rd)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.193 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv0 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))) (not (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))
(define-fun assumption.194 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.195 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (_ bv0 2) RTL.ex_wb_rd) (= (_ bv2 2) RTL.id_ex_rd))))))) (and (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))) (not (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))))
(define-fun assumption.196 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv0 2) RTL.ex_wb_rd)))))) (and (not (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (= RTL.id_ex_rd RTL.reg_3_w_stage)))) (not (and (not (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))))
(define-fun assumption.197 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.198 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.199 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= ((_ extract 1 1) RTL.reg_0_w_stage) RTL.id_ex_reg_wen)) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.200 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.201 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv1 2) RTL.id_ex_rd)))))))) (and (not (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_1_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= RTL.id_ex_rd RTL.reg_1_w_stage)))) (and (not (and (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= RTL.id_ex_rd RTL.reg_1_w_stage))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_1_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)))) (and (not (and (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))) (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (not (= RTL.id_ex_rd RTL.reg_2_w_stage)) (and (= RTL.id_ex_rd (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))))))))))
(define-fun assumption.202 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.203 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.204 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.205 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.206 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.207 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv1 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.208 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= (_ bv2 2) RTL.id_ex_rd)) (= RTL.id_ex_reg_wen ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.209 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.210 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.211 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.212 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.213 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.214 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd))))))) (= (_ bv1 2) RTL.reg_2_w_stage)))))
(define-fun assumption.215 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv2 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.216 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.217 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.218 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv0 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.219 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= (bvnot RTL.ex_wb_reg_wen) (_ bv1 1)) (= (_ bv2 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv3 2) RTL.id_ex_rd))))) (= (_ bv1 2) RTL.reg_2_w_stage)))) (and (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))))) (and (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))) (and (not (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))) (and (not (and (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1))) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))))))))
(define-fun assumption.220 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv3 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.221 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv3 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))))
(define-fun assumption.222 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (= (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.223 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv0 2)) (= (_ bv2 2) RTL.ex_wb_rd))))))) (and (not (and (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage)))))) (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))) (not (and (not (= RTL.id_ex_rd (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage))))))))))
(define-fun assumption.224 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv1 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (= (_ bv2 2) RTL.ex_wb_rd)))))) (and (not (and (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))) (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (and (not (and (= RTL.reg_2_w_stage (bvnot (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= RTL.id_ex_rd (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (not (and (= RTL.reg_2_w_stage (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (= RTL.id_ex_rd RTL.reg_1_w_stage)))))))
(define-fun assumption.225 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.226 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv1 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= RTL.id_ex_op (_ bv2 2)) (= (_ bv1 2) RTL.ex_wb_rd))))))))
(define-fun assumption.227 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) RTL.id_ex_reg_wen)))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv3 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.228 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.229 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv2 2) RTL.id_ex_rd)))))))) (and (not (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (and (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage)) (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))) (and (not (and (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (= RTL.reg_3_w_stage RTL.reg_0_w_stage) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.reg_2_w_stage RTL.reg_0_w_stage))))) (not (and (not (= RTL.reg_0_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (and (= RTL.reg_0_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (and (not (= RTL.reg_3_w_stage (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= ((_ extract 1 1) RTL.reg_2_w_stage) ((_ extract 1 1) RTL.reg_3_w_stage))))))))))))
(define-fun assumption.230 ((RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))) (and (not (and (= ((_ extract 1 1) RTL.reg_1_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)) (and (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1))))) (not (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_2_w_stage)))))))))
(define-fun assumption.231 ((RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv0 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))) (and (not (and (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)))) (not (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))) (not (and (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (and (= ((_ extract 1 1) RTL.reg_0_w_stage) ((_ extract 1 1) RTL.reg_1_w_stage)) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_2_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.reg_2_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))))))))))
(define-fun assumption.232 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
(define-fun assumption.233 ((RTL.reg_1_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.reg_2_w_stage (_ BitVec 2))) Bool (and (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd)) (= RTL.id_ex_op (_ bv0 2))) (= (_ bv1 2) RTL.id_ex_rd)))))))) (and (not (and (and (= (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1))) (_ bv1 1)) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (not (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage)))))))) (not (and (= RTL.reg_3_w_stage (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (and (= (bvnot (bvcomp RTL.id_ex_reg_wen (ite (= (_ bv0 2) RTL.reg_3_w_stage) (_ bv1 1) (_ bv0 1)))) (_ bv1 1)) (= RTL.id_ex_rd (bvand (_ bv1 2) (bvnot (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))))))
(define-fun assumption.234 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv3 2) RTL.id_ex_rd)))))))))
(define-fun assumption.235 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv3 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.236 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv1 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv1 2) RTL.id_ex_rd)))))))))
(define-fun assumption.237 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv1 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.238 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv2 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv0 2) RTL.id_ex_rd)))))))))
(define-fun assumption.239 ((RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (= (_ bv0 2) RTL.id_ex_rd) (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd)))))))))))
(define-fun assumption.240 ((RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_3_w_stage (_ BitVec 2))) Bool (not (and (= (_ bv0 2) RTL.reg_3_w_stage) (and (= (_ bv0 2) RTL.reg_2_w_stage) (and (= (_ bv0 2) RTL.reg_1_w_stage) (and (= (_ bv0 2) RTL.reg_0_w_stage) (and (= (bvnot RTL.id_ex_reg_wen) (_ bv1 1)) (and (and (= RTL.id_ex_op (_ bv3 2)) (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= (_ bv1 2) RTL.ex_wb_rd))) (= (_ bv2 2) RTL.id_ex_rd)))))))))
