(define-fun assumption.0 ((RTL.mem_do_rdata (_ BitVec 1)) (RTL.is_jalr_addi_slti_sltiu_xori_ori_andi (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.is_alu_reg_imm (_ BitVec 1)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.mem_state (_ BitVec 2))) Bool (and (and true (or (or (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2)))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_valid) ((_ extract 0 0) (_ bv1 1)))))) (not (and (and (and (and (and (and (and (and (= RTL.mem_state (_ bv3 2)) (= RTL.mem_valid (_ bv1 1))) (= RTL.mem_do_wdata (_ bv1 1))) (= RTL.mem_instr (_ bv1 1))) (= RTL.is_alu_reg_imm (_ bv1 1))) (= RTL.mem_do_rinst (_ bv1 1))) (= RTL.decoder_trigger (_ bv0 1))) (= RTL.is_jalr_addi_slti_sltiu_xori_ori_andi (_ bv1 1))) (= RTL.mem_do_rdata (_ bv1 1))))))
(define-fun assumption.1 ((RTL.mem_state (_ BitVec 2)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_do_prefetch (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1))) Bool (and (and (and (and true (or (not (= ((_ extract 0 0) RTL.decoder_trigger) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv1 1)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_instr) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_valid) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_instr) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv0 2))))) (not (= ((_ extract 0 0) RTL.mem_valid) ((_ extract 0 0) (_ bv1 1)))))) (not (and (and (and (and (and (and (and (and (= RTL.decoder_trigger (_ bv0 1)) (= RTL.compressed_instr (_ bv0 1))) (= RTL.mem_do_rdata (_ bv0 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_prefetch (_ bv1 1))) (= RTL.mem_do_wdata (_ bv0 1))) (= RTL.mem_valid (_ bv1 1))) (= RTL.mem_instr (_ bv1 1))) (= RTL.mem_state (_ bv0 2))))))
(define-fun assumption.2 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_state (_ BitVec 2)) (RTL.is_lb_lh_lw_lbu_lhu (_ BitVec 1)) (RTL.is_sb_sh_sw (_ BitVec 1)) (RTL.latched_compr (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.is_alu_reg_imm (_ BitVec 1))) Bool (and true (not (and (and (and (and (and (and (and (and (and (and (= RTL.is_alu_reg_imm (_ bv0 1)) (= RTL.mem_do_wdata (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.mem_do_rdata (_ bv1 1))) (= RTL.latched_compr (_ bv0 1))) (= RTL.is_sb_sh_sw (_ bv1 1))) (= RTL.is_lb_lh_lw_lbu_lhu (_ bv0 1))) (= RTL.mem_state (_ bv1 2))) (= RTL.mem_instr (_ bv1 1))) (= RTL.mem_valid (_ bv1 1))))))
(define-fun assumption.3 ((RTL.mem_instr (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.is_sb_sh_sw (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.is_alu_reg_imm (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.mem_state (_ BitVec 2)) (RTL.is_lb_lh_lw_lbu_lhu (_ BitVec 1))) Bool (and true (not (and (and (and (and (and (and (and (and (and (= RTL.is_lb_lh_lw_lbu_lhu (_ bv0 1)) (= RTL.mem_state (_ bv1 2))) (= RTL.decoder_trigger (_ bv1 1))) (= RTL.mem_do_rdata (_ bv1 1))) (= RTL.is_alu_reg_imm (_ bv0 1))) (= RTL.mem_do_wdata (_ bv1 1))) (= RTL.is_sb_sh_sw (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_valid (_ bv1 1))) (= RTL.mem_instr (_ bv1 1))))))
(define-fun assumption.4 ((RTL.mem_state (_ BitVec 2)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.cpu_state (_ BitVec 8)) (RTL.trap (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.mem_do_prefetch (_ BitVec 1)) (RTL.do_waitirq (_ BitVec 1))) Bool (and (and (and (and (and (and (and (and (and true (not (= ((_ extract 0 0) RTL.do_waitirq) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 4 4) RTL.cpu_state) ((_ extract 4 4) (_ bv16 8))))) (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_prefetch) ((_ extract 0 0) (_ bv0 1)))) (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv0 1))))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 1 1) RTL.cpu_state) ((_ extract 1 1) (_ bv2 8)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_do_wdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.decoder_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_do_wdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv32 8)))))) (or (or (not (= ((_ extract 0 0) RTL.cpu_state) ((_ extract 0 0) (_ bv1 8)))) (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv0 1))))) (not (= ((_ extract 0 0) RTL.mem_do_wdata) ((_ extract 0 0) (_ bv1 1)))))) (or (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv4 8)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_do_wdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 2 2) RTL.cpu_state) ((_ extract 2 2) (_ bv4 8)))))) (not (and (and (and (and (and (= RTL.mem_do_wdata (_ bv1 1)) (= RTL.mem_instr (_ bv1 1))) (= RTL.mem_valid (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_do_rdata (_ bv1 1))) (= RTL.mem_state (_ bv1 2))))))
(define-fun assumption.5 ((RTL.mem_valid (_ BitVec 1)) (RTL.mem_instr (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.mem_state (_ BitVec 2)) (RTL.cpu_state (_ BitVec 8)) (RTL.mem_do_prefetch (_ BitVec 1)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.do_waitirq (_ BitVec 1)) (RTL.trap (_ BitVec 1))) Bool (and (and (and (and (and (and (and (and (and true (or (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv1 8)))))) (not (= ((_ extract 0 0) RTL.do_waitirq) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 4 4) RTL.cpu_state) ((_ extract 4 4) (_ bv16 8))))) (or (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.decoder_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (or (or (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv0 2)))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv0 2))))) (not (= ((_ extract 0 0) RTL.mem_do_prefetch) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))))) (or (or (or (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv0 2)))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv0 2))))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv1 1)))))) (or (or (or (or (or (or (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv0 1)))) (not (= ((_ extract 0 0) RTL.mem_do_prefetch) ((_ extract 0 0) (_ bv0 1))))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv0 1))))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv1 8))))) (not (= ((_ extract 6 6) RTL.cpu_state) ((_ extract 6 6) (_ bv1 8))))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv1 8))))) (not (= ((_ extract 3 3) RTL.cpu_state) ((_ extract 3 3) (_ bv1 8))))) (not (= ((_ extract 2 2) RTL.cpu_state) ((_ extract 2 2) (_ bv1 8))))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv1 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv1 2)))))) (or (or (or (or (or (or (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv32 8)))) (not (= ((_ extract 6 6) RTL.cpu_state) ((_ extract 6 6) (_ bv32 8))))) (not (= ((_ extract 0 0) RTL.cpu_state) ((_ extract 0 0) (_ bv32 8))))) (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.mem_valid) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 0 0) RTL.mem_instr) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv1 2)))))) (not (and (and (and (and (= RTL.mem_state (_ bv1 2)) (= RTL.mem_do_rdata (_ bv1 1))) (= RTL.mem_do_rinst (_ bv0 1))) (= RTL.mem_instr (_ bv1 1))) (= RTL.mem_valid (_ bv1 1))))))
(define-fun assumption.6 ((RTL.mem_instr (_ BitVec 1)) (RTL.mem_valid (_ BitVec 1)) (RTL.compressed_instr (_ BitVec 1)) (RTL.mem_do_rinst (_ BitVec 1)) (RTL.is_slli_srli_srai (_ BitVec 1)) (RTL.mem_do_wdata (_ BitVec 1)) (RTL.mem_state (_ BitVec 2)) (RTL.decoder_trigger (_ BitVec 1)) (RTL.mem_do_rdata (_ BitVec 1)) (RTL.cpu_state (_ BitVec 8)) (RTL.decoder_pseudo_trigger (_ BitVec 1)) (RTL.mem_do_prefetch (_ BitVec 1)) (RTL.trap (_ BitVec 1))) Bool (and (and (and (and (and (and (and (and (and (and (and (and true (or (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.decoder_pseudo_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (not (= ((_ extract 0 0) RTL.decoder_pseudo_trigger) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.cpu_state) ((_ extract 0 0) (_ bv1 8)))))) (not (= ((_ extract 4 4) RTL.cpu_state) ((_ extract 4 4) (_ bv16 8))))) (or (not (= ((_ extract 0 0) RTL.trap) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv64 8)))))) (or (not (= ((_ extract 0 0) RTL.mem_do_prefetch) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.decoder_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv32 8)))))) (or (or (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.decoder_pseudo_trigger) ((_ extract 0 0) (_ bv1 1)))))) (or (or (or (or (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rinst) ((_ extract 0 0) (_ bv0 1)))) (not (= ((_ extract 0 0) RTL.mem_do_wdata) ((_ extract 0 0) (_ bv1 1))))) (not (= ((_ extract 7 7) RTL.cpu_state) ((_ extract 7 7) (_ bv1 8))))) (not (= ((_ extract 6 6) RTL.cpu_state) ((_ extract 6 6) (_ bv1 8))))) (not (= ((_ extract 5 5) RTL.cpu_state) ((_ extract 5 5) (_ bv1 8))))) (not (= ((_ extract 3 3) RTL.cpu_state) ((_ extract 3 3) (_ bv1 8))))) (not (= ((_ extract 2 2) RTL.cpu_state) ((_ extract 2 2) (_ bv1 8))))) (not (= ((_ extract 1 1) RTL.cpu_state) ((_ extract 1 1) (_ bv1 8)))))) (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 6 6) RTL.cpu_state) ((_ extract 6 6) (_ bv64 8)))))) (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 2 2) RTL.cpu_state) ((_ extract 2 2) (_ bv4 8)))))) (or (or (or (not (= ((_ extract 0 0) RTL.mem_do_rdata) ((_ extract 0 0) (_ bv1 1)))) (not (= ((_ extract 1 1) RTL.mem_state) ((_ extract 1 1) (_ bv3 2))))) (not (= ((_ extract 0 0) RTL.mem_state) ((_ extract 0 0) (_ bv3 2))))) (not (= ((_ extract 3 3) RTL.cpu_state) ((_ extract 3 3) (_ bv8 8)))))) (not (and (and (and (and (and (and (and (and (= RTL.mem_do_rdata (_ bv1 1)) (= RTL.decoder_trigger (_ bv0 1))) (= RTL.mem_state (_ bv3 2))) (= RTL.mem_do_wdata (_ bv0 1))) (= RTL.is_slli_srli_srai (_ bv0 1))) (= RTL.mem_do_rinst (_ bv1 1))) (= RTL.compressed_instr (_ bv0 1))) (= RTL.mem_valid (_ bv0 1))) (= RTL.mem_instr (_ bv1 1))))))
