(define-fun assumption.0 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and (and true (or (not (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen)) (not (= (_ bv2 2) RTL.reg_3_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_3_w_stage)) (not (= (_ bv2 2) RTL.reg_1_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_1_w_stage)) (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.1 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv2 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.2 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.3 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.rst (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.inst (_ BitVec 8))) Bool (and (and (and (and (and true (or (not (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (or (not (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (not (= (ite (= RTL.rst (_ bv1 1)) RTL.ex_wb_rd RTL.id_ex_rd) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (_ bv2 2)))))) (or (or (not (= (_ bv1 1) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd) (_ bv1 1) (_ bv0 1))))) (not (= RTL.reg_1_w_stage RTL.reg_0_w_stage)))) (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (not (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.4 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.5 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.6 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.7 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.8 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.9 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.inst (_ BitVec 8)) (RTL.rst (_ BitVec 1)) (RTL.id_ex_reg_wen (_ BitVec 1))) Bool (and (and (and (and (and true (or (or (or (or (= (_ bv1 1) RTL.rst) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= RTL.reg_0_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (ite (= RTL.rst (_ bv1 1)) RTL.ex_wb_rd RTL.id_ex_rd)))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (not (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen)))) (not (= (_ bv1 1) (ite (= RTL.reg_0_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1)))))) (or (or (or (or (not (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))))) (= (_ bv1 1) (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2))))) (= (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2)) (ite (= RTL.reg_0_w_stage (_ bv1 2)) (_ bv1 1) (_ bv0 1)))) (not (= (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))))) (or (not (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (not (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.10 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.11 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and true (or (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv2 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.12 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.13 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.14 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.inst (_ BitVec 8)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.rst (_ BitVec 1)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2))) Bool (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and true (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (= (_ bv1 1) (ite (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (= (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (and (and (and true (or (not (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen)) (not (= (_ bv2 2) RTL.reg_3_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_3_w_stage)) (not (= (_ bv2 2) RTL.reg_1_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_1_w_stage)) (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd))))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage)) (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (= (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (and (and (and true (or (not (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen)) (not (= (_ bv2 2) RTL.reg_3_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_3_w_stage)) (not (= (_ bv2 2) RTL.reg_1_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_1_w_stage)) (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd))))) (not (= (or (or (= (_ bv1 1) RTL.rst) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= RTL.reg_0_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1)))))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (= (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (and (and (and true (or (not (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen)) (not (= (_ bv2 2) RTL.reg_3_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_3_w_stage)) (not (= (_ bv2 2) RTL.reg_1_w_stage)))) (or (not (= (_ bv3 2) RTL.reg_1_w_stage)) (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd))))) (not (= (or (or (= (_ bv1 1) RTL.rst) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= RTL.reg_0_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))))))) (or (or (not (= (_ bv1 1) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1))))) (= RTL.id_ex_rd (ite (= RTL.rst (_ bv1 1)) RTL.id_ex_rd ((_ extract 1 0) RTL.inst))))) (or (or (or (or (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (not (= (_ bv1 1) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2))))) (not (= (_ bv1 1) (ite (= RTL.ex_wb_rd (_ bv3 2)) (_ bv1 1) (_ bv0 1))))) (not (= (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)) (ite (not (= (_ bv2 2) RTL.reg_1_w_stage)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ extract 1 1) RTL.reg_1_w_stage) (ite (= (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2)) (ite (= RTL.reg_0_w_stage (_ bv1 2)) (_ bv1 1) (_ bv0 1))) (_ bv1 1) (_ bv0 1)))))) (or (not (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1)))) (not (= (= RTL.id_ex_rd (_ bv1 2)) (= (_ bv3 2) RTL.reg_3_w_stage))))) (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (= (= RTL.reg_0_w_stage (_ bv0 2)) (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (ite (= (= ((_ extract 1 1) RTL.reg_1_w_stage) RTL.id_ex_reg_wen) (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (= (= RTL.reg_0_w_stage (_ bv0 2)) (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (or (or (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv1 2)) (_ bv1 1) (_ bv0 1))))) (not (= (_ bv1 1) (ite (= RTL.reg_2_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1))))) (or (or (or (or (or (or (or (not (= (_ bv1 1) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv1 2)) (_ bv1 1) (_ bv0 1))))) (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1)))) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))))))) (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) (ite (distinct ((_ extract 1 0) RTL.inst) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (ite (= RTL.rst (_ bv1 1)) RTL.id_ex_rd ((_ extract 1 0) RTL.inst)) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv2 2))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_2_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)))))))) (or (or (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2))))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= RTL.reg_1_w_stage (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (or (or (or (or (or (or (or (not (= (_ bv1 1) RTL.id_ex_reg_wen)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (_ bv1 1) (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))))))) (not (= (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (= RTL.reg_0_w_stage (_ bv1 2))))) (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (or (or (or (or (or (= (_ bv1 1) RTL.rst) (not (= (_ bv1 1) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv2 2))))) (= (_ bv1 1) (ite (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (and true (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_reg_wen (_ bv0 1)))))) (= (= RTL.reg_1_w_stage (_ bv0 2)) (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (or (or (or (or (or (or (or (or (not (= (_ bv1 1) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (= (_ bv1 1) (ite (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (and true (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_reg_wen (_ bv0 1))))))) (or (or (or (or (or (or (or (or (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2))))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) (_ bv1 1) (_ bv0 1))))) (not (= (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (and true (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_reg_wen (_ bv0 1)))))) (= (= RTL.reg_1_w_stage (_ bv0 2)) (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage))) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))))))) (or (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= (_ bv1 1) RTL.ex_wb_reg_wen)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2))))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (not (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) (_ bv1 1) (_ bv0 1))))) (not (= (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (and true (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_reg_wen (_ bv0 1))))))) (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage))) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_3_w_stage))) (= (_ bv1 1) RTL.ex_wb_reg_wen)) (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (not (= (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (and (and true (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_reg_wen (_ bv0 1))))))) (or (or (or (or (or (or (or (or (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (ite (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= ((_ extract 1 1) RTL.reg_2_w_stage) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))))))) (not (= (distinct (ite (not (distinct ((_ extract 3 2) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) (_ bv0 2)) (= RTL.reg_0_w_stage (_ bv1 2))))) (= ((_ extract 1 1) RTL.reg_3_w_stage) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen))) (not (= RTL.reg_1_w_stage (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))))) (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= RTL.reg_2_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (or (not (= (_ bv1 1) (ite (= RTL.id_ex_rd (_ bv0 2)) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))))) (= RTL.reg_1_w_stage (_ bv0 2)))))) (or (or (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (not (= (_ bv1 1) (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2))))) (not (= (_ bv1 1) (bvcomp (ite (not (distinct ((_ extract 5 4) RTL.inst) (_ bv0 2))) RTL.reg_0_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 5 4) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage))) ((_ zero_extend 1) (_ bv1 1)))))) (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1)))) (= ((_ extract 1 1) RTL.reg_3_w_stage) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen)))) (or (or (or (or (or (or (or (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (not (= (_ bv1 1) RTL.id_ex_reg_wen))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (= (_ bv1 1) (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (= (_ bv1 1) (ite (= (_ bv1 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) ((_ zero_extend 1) (_ bv1 1)))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_1_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_1_w_stage))))) (_ bv1 1) (_ bv0 1)))) (not (= (_ bv1 1) (ite (= RTL.reg_3_w_stage (_ bv0 2)) (_ bv1 1) (_ bv0 1))))) (not (= (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_2_w_stage)) (ite (= (bvcomp ((_ extract 3 2) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (_ bv1 1)) RTL.reg_1_w_stage (ite (= (bvcomp ((_ extract 3 2) RTL.inst) (_ bv2 2)) (_ bv1 1)) RTL.reg_2_w_stage RTL.reg_3_w_stage)))))) (not (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv0 2))))))
(define-fun assumption.15 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.16 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.17 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.18 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.19 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.20 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv1 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.21 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.22 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1))) Bool (and true (not (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.23 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.24 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.inst (_ BitVec 8)) (RTL.rst (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and (and (and true (or (or (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_2_w_stage))) (= (_ bv1 1) (ite (= (ite (= RTL.rst (_ bv1 1)) RTL.ex_wb_rd RTL.id_ex_rd) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (_ bv2 2))) (_ bv1 1) (_ bv0 1)))) (= (_ bv1 1) (ite (or (or (= (_ bv1 1) ((_ extract 1 1) RTL.reg_0_w_stage)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2)))) (= (_ bv1 1) RTL.rst)) (_ bv1 1) (_ bv0 1))))) (or (or (= (_ bv1 1) (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (not (= (= RTL.id_ex_rd (_ bv2 2)) (not (= (_ bv1 1) ((_ extract 1 1) RTL.reg_1_w_stage)))))) (= (_ bv0 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))))) (not (and (and (and (and (and (and (and (= RTL.ex_wb_reg_wen (_ bv1 1)) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.25 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2)) (RTL.inst (_ BitVec 8)) (RTL.rst (_ BitVec 1))) Bool (and (and true (or (or (= (_ bv1 1) (ite (= (_ bv0 2) (ite (= RTL.rst (_ bv1 1)) (_ bv0 2) (ite (= (bvand (bvor (bvor (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2))) (bvcomp ((_ extract 1 0) RTL.inst) (_ bv3 2))) (_ bv1 1)) (bvor ((_ zero_extend 1) ((_ extract 1 1) RTL.reg_3_w_stage)) (_ bv2 2)) (concat (_ bv0 1) ((_ extract 1 1) RTL.reg_3_w_stage))))) (_ bv1 1) (_ bv0 1))) (= (_ bv1 1) (ite (or (not (= (_ bv1 1) (ite (= RTL.rst (_ bv1 1)) (_ bv0 1) RTL.id_ex_reg_wen))) (not (= (_ bv1 1) (ite (= ((_ zero_extend 1) (_ bv1 1)) RTL.id_ex_rd) (_ bv1 1) (_ bv0 1))))) (_ bv1 1) (_ bv0 1)))) (= (_ bv1 1) (ite (or (or (or (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv2 2))) (= (_ bv1 1) RTL.rst)) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) (_ bv3 2)))) (= (_ bv1 1) (bvcomp ((_ extract 7 6) RTL.inst) ((_ zero_extend 1) (_ bv1 1))))) (_ bv1 1) (_ bv0 1))))) (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv1 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.26 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.27 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv1 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.28 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_op (_ bv2 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.29 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.30 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv3 2)) (= RTL.ex_wb_reg_wen (_ bv1 1))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv1 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv0 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
(define-fun assumption.31 ((RTL.reg_3_w_stage (_ BitVec 2)) (RTL.reg_2_w_stage (_ BitVec 2)) (RTL.reg_1_w_stage (_ BitVec 2)) (RTL.reg_0_w_stage (_ BitVec 2)) (RTL.id_ex_reg_wen (_ BitVec 1)) (RTL.id_ex_rd (_ BitVec 2)) (RTL.id_ex_op (_ BitVec 2)) (RTL.ex_wb_reg_wen (_ BitVec 1)) (RTL.ex_wb_rd (_ BitVec 2))) Bool (and true (not (and (and (and (and (and (and (and (and (= RTL.ex_wb_rd (_ bv0 2)) (= RTL.ex_wb_reg_wen (_ bv0 1))) (= RTL.id_ex_op (_ bv0 2))) (= RTL.id_ex_rd (_ bv1 2))) (= RTL.id_ex_reg_wen (_ bv0 1))) (= RTL.reg_0_w_stage (_ bv0 2))) (= RTL.reg_1_w_stage (_ bv0 2))) (= RTL.reg_2_w_stage (_ bv1 2))) (= RTL.reg_3_w_stage (_ bv1 2))))))
